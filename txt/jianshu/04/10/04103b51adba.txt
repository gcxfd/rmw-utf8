系统设计
随着模块、机器和数据量的增大，处理环节变多后，错误和异常变成常态。现有系统处理异常情况经常捉襟见肘：某个资源（模块、机器、网络）出现问题时，不能尽快切换到备用资源。没有备用资源可用时，模块将上游堵住，导致大面积堵塞，局部异常扩散到全局。
当某个资源不够用时，不能方便地扩充资源。常因扩充成本太高而选择继续忍受。
编写正确、高效地与数百个模块交互的应用程序，对模块开发人员来说是个巨大的挑战。实践证明这种开发既耗费精力，又容易出错，且后续难以维护。